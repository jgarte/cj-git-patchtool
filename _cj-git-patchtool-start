#!/bin/bash

usage () {
    echo "$0 base-id basedir [ end-id ]"
    echo " creates directory basedir, puts patches and _list there,"
    echo " checks them into a repo, and opens _list and a terminal"
    echo " within basedir."
    echo " end-id is HEAD by default."
    exit 1
}

if [ $# -ne 2 -a $# -ne 3 ]; then
    usage
fi

if [ "$1" = "-h" -o "$1" = "--help" ]; then
    usage
fi

set -eu

_baseid="$1"
basedir="$2"
_endid="${3-HEAD}"

baseid="$(git rev-parse "$_baseid")"
endid="$(git rev-parse "$_endid")"

if [ -e "$basedir" ]; then
    echo "'$basedir' already exists"
    exit 1
fi

basebasedir=`dirname "$basedir"`
if [ '!' -d "$basebasedir" ]; then
    echo "directory '$basebasedir' does not exist"
    exit 1
fi

if ! cj-git-status-is-clean; then
    exit 1
fi

tmpdir="tmp-`passwdgen`"

mkdir "$tmpdir"

cd "$tmpdir"
git format-patch --no-signature --thread -M -C "$baseid".."$endid"
ls *.patch > _list
echo "$baseid" > _baseid
echo "$baseid" > _origbaseid
echo "$endid" > _origheadid

cd ..
mv "$tmpdir" "$basedir"

if [ "$baseid" = "`git rev-parse HEAD`" ]; then
    echo "***NOTE***: not adding tag because baseid is HEAD"
else
    gdrop -a -m "for basedir '$basedir', baseid '$baseid', endid '$endid'

(_baseid '$_baseid', _endid '$_endid')" patchtool
fi

cd "$basedir"

cj-git-init
git add .
git commit -m "orig"
term
"$EDITOR" _list &
#or without quotes?^
